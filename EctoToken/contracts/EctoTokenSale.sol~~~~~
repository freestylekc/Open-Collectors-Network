pragma solidity ^ 0.4.19;

import "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol";
import "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol";
import "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol";
import "openzeppelin-solidity/contracts/lifecycle/TokenDestructible.sol";
import "./BonusTokenSale.sol";
import "./WhitelistedPausableCrowdsale.sol";

//contract EctoTokenSale is WhitelistedCrowdsale, CappedCrowdsale, BonusTokenSale, , TokenDestructible
contract EctoTokenSale is WhitelistedPausableCrowdsale, CappedCrowdsale  
 {

    constructor(uint256 _cap, uint256 _rate, address _wallet, ERC20 _token, uint256[] _thresholds, uint256[] _bonuses) public

    //CappedCrowdsale(_cap)
    //BonusTokenSale(_thresholds, _bonuses)
    Crowdsale(_rate, _wallet, _token)
    {
    }
}

/*
PausableTokenSale 				= Crowdsale, Pausable, Ownable
WhitelistedCrowdsale 			= Ownable, RBAC, Crowdsale

*/